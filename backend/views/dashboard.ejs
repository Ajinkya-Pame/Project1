<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Dashboard | SendMate</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="icon" href="/images/favicon.ico" type="image/x-icon">
    <style>
        .notification {
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            color: white;
            padding: 10px 20px;
            border-radius: 5px;
            z-index: 1000;
            font-weight: bold;
        }
    </style>
</head>

<body class="bg-gray-100">
    <div class="wrapper min-h-screen flex flex-col">
        <header>
            <%- include('partials/nav_users') %>
        </header>
        <main class="flex-grow">
            <div class="container mx-auto my-10 p-6">
                <div class="bg-white shadow-md rounded-lg p-6">
                    <h2 class="text-2xl font-bold text-gray-800 mb-4">Welcome, <%= user.username %>!</h2>

                    <!-- Dropdown for Post Type Selection -->
                    <div class="flex flex-col md:flex-row justify-between items-center mb-4">
                        <h3 class="text-xl font-semibold text-gray-700 mb-2 md:mb-0">Your Posts</h3>
                        <div class="w-full md:w-auto">
                            <label for="postType" class="sr-only">Select Post Type:</label>
                            <select id="postType" class="border rounded px-4 py-1 w-full md:w-auto cursor-pointer ">
                                <option class="bg-white text-gray-700 cursor-pointer " value="senderPost">Sender
                                    Post</option>
                                <option class="bg-white text-gray-700 cursor-pointer " value="Responses">Submitted
                                    Responses</option>
                                <option class="bg-white text-gray-700 cursor-pointer " value="travellerPost">Traveller
                                    Post</option>
                            </select>
                        </div>
                    </div>

                    <!-- Dynamic Posts Container -->
                    <div id="postsContainer" class="space-y-4">
                        <!-- Posts will be loaded here -->
                    </div>
                </div>
            </div>
        </main>
        <!-- <footer>
            <%- include('partials/footer') %>
        </footer> -->
    </div>
    <script>
        function initialLoad() {
            const postTypeSelect = document.getElementById("postType");
            const defaultPostType = postTypeSelect.value;
            loadPosts(defaultPostType);
        }

        window.onload = initialLoad;

        function loadPosts(postType) {
            // For 'Responses', fetch from /responses (you'll need to create this backend route)
            const url = postType === 'Responses' ? '/responses' : `/posts/${postType}`;

            fetch(url)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok ' + response.statusText);
                    }
                    return response.json();
                })
                .then(data => {
                    displayPosts(data, postType);
                })
                .catch(error => console.error('Error loading posts:', error));
        }

        document.getElementById("postType").addEventListener("change", function () {
            const selectedType = this.value;
            loadPosts(selectedType);
        });
        function displayPosts(items, postType) {
            const postsContainer = document.getElementById('postsContainer');
            postsContainer.innerHTML = '';

            if (!items || items.length === 0) {
                postsContainer.innerHTML = `<p class="text-gray-600">You haven't created any ${postType === 'Responses' ? 'responses' : 'posts'} yet.</p>`;
                return;
            }

            const list = document.createElement('ul');
            list.classList.add('space-y-4');

            items.forEach(item => {
                let postDetails = {};
                let status = '', formattedDate = '', postName = '', source = '', destination = '', postId = '', priceOffer = '';

                if (postType === 'Responses') {
                    postDetails = item.postDetails || {};
                    status = item.status || 'Pending';
                    formattedDate = new Date(item.createdAt).toLocaleDateString('en-US', {
                        weekday: 'long',
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric',
                    });

                    postName = postDetails.productName || postDetails.modeOfTravel || 'Unknown Post';
                    source = postDetails.source || postDetails.startLocation || 'Unknown';
                    destination = postDetails.destination || postDetails.endLocation || 'Unknown';
                    postId = postDetails._id || '';
                    priceOffer = item.priceOffer || '';
                } else {
                    formattedDate = new Date(item.expectedTime).toLocaleDateString('en-US', {
                        weekday: 'long',
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric',
                    });
                    postName = item.productName || item.modeOfTravel || 'Unnamed Post';
                    source = item.source || item.startLocation || 'Unknown';
                    destination = item.destination || item.endLocation || 'Unknown';
                    postId = item._id;
                    postDetails = item; // for imageUrl
                }

                const li = document.createElement('li');
                li.classList.add('bg-gray-50', 'p-6', 'rounded-lg', 'shadow', 'flex', 'flex-col', 'md:flex-row', 'justify-between', 'items-center');

                li.innerHTML = `
            <div onclick="window.location.href='/${postType === 'Responses' ? 'dashboard/' + postId + '/responses' : 'dashboard/' + postId + '/responses'}'"
                class="cursor-pointer w-full flex flex-col md:flex-row gap-4 border p-4 rounded hover:bg-gray-100 transition">

                ${postDetails.imageUrl ? `
                    <div class="w-full md:w-1/3">
                        <img src="${postDetails.imageUrl}" alt="Uploaded Image"
                            class="w-full h-auto max-h-60 object-cover rounded-lg border" />
                    </div>` : ''}

                <div class="flex-1">
                    <h4 class="text-lg font-semibold text-gray-800 mb-2"><b>Name: </b>${postName}</h4>
                    <p class="text-gray-600"><b>From: </b>${source}</p>
                    <p class="text-gray-600"><b>To: </b>${destination}</p>
                    <p class="text-gray-600"><b>Date: </b>${formattedDate}</p>
                    ${postType === 'Responses' ? `<p class="text-gray-600"><b>Status: </b>${status}</p>` : ''}
                    ${postType === 'Responses' ? `<p class="text-gray-600"><b>Price Offer: </b>â‚¹${priceOffer}</p>` : ''}
                </div>

                <div class="flex flex-col justify-between gap-2 md:items-end">
                    ${postType !== 'Responses' ? `
                        <form action="/${postType}/${postId}?_method=DELETE" method="post" onclick="event.stopPropagation();">
                            <button class="bg-red-500 hover:bg-red-600 text-white font-semibold py-2 px-4 rounded w-full md:w-24">DELETE</button>
                        </form>
                        <form action="/${postType}/${postId}/editForm" method="get" onclick="event.stopPropagation();">
                            <button class="bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded w-full md:w-24">EDIT</button>
                        </form>` : ''}
                </div>
            </div>
        `;

                list.appendChild(li);
            });
            postsContainer.appendChild(list);

            // Add create post button for senderPost and travellerPost only
            if (postType === "senderPost" || postType === "travellerPost") {
                const createPostDiv = document.createElement('div');
                createPostDiv.classList.add('mt-6');

                if (postType === "senderPost") {
                    createPostDiv.innerHTML = `
                            <a href="/register-parcel" class="inline-block bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded-lg shadow w-full sm:w-auto mx-auto sm:mx-0 text-center">
                                Create Sender Post
                            </a>`;
                } else if (postType === "travellerPost") {
                    createPostDiv.innerHTML = `
                            <a href="/travellerPost" class="inline-block bg-blue-500 hover:bg-green-600 text-white font-semibold py-2 px-4 rounded-lg shadow w-full sm:w-auto mx-auto sm:mx-0 text-center">
                                Create Traveller Post
                            </a>`;
                }
                postsContainer.appendChild(createPostDiv);
            }
        }
    </script>

</body>

</html>