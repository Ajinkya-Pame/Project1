<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home | SendMate</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="icon" href="/images/favicon.ico" type="image/x-icon">
</head>

<body class="bg-gray-100 font-sans">
    <!-- Fixed Header to stay on top of the page -->
    <header class="bg-white shadow fixed top-0 w-full z-10">
        <% if (!user) { %>
            <%- include('partials/nav') %> <!-- Nav for guests -->
                <% } else { %>
                    <%- include('partials/nav_users') %> <!-- Nav for logged-in users -->
                        <% } %>
    </header>

    <!-- Main section with top padding to prevent overlap with the fixed header -->
    <main class="pt-16 sm:pt-16 lg:pt-16">
        <!-- Search bar and filter buttons with responsive design -->
        <div class="flex flex-wrap justify-center py-6 bg-blue-100">
            <input type="text" id="sourceInput" placeholder="Choose starting point, or click on the map..."
                class="px-4 py-2 mx-2 w-full sm:w-64 rounded-full border border-teal-500 focus:outline-none">
            <input type="text" id="destinationInput" placeholder="Choose destination..."
                class="px-4 py-2 mx-2 w-full sm:w-64 rounded-full border border-teal-500 focus:outline-none">
            <button id="searchButton"
                class="bg-blue-500 text-white font-semibold py-2 px-4 rounded-md shadow hover:bg-blue-600 mx-2 mt-2 sm:mt-0">
                Search
            </button>
            <button id="filterButton"
                class="bg-blue-500 text-white font-semibold py-2 px-4 rounded-md shadow hover:bg-blue-600 mx-2 mt-2 sm:mt-0">
                Filter
            </button>
        </div>

        <!-- Sidebar Filter Panel with transition effect for mobile -->
        <div id="filterSidebar"
            class="fixed top-0 right-0 w-80 h-full bg-white shadow-lg transform translate-x-full transition-transform duration-300 ease-in-out z-50">
            <div class="flex justify-between items-center px-4 py-4 border-b">
                <h2 class="text-lg font-semibold">Filter Options</h2>
                <button id="closeSidebar" class="text-gray-500 hover:text-gray-800">&times;</button>
            </div>
            <div class="px-4 py-6">
                <label for="postType" class="block text-gray-700 mb-2">Select Post Type:</label>
                <select id="postType" class="border rounded px-4 py-2 w-full cursor-pointer">
                    <option value="senderPost">Sender Post</option>
                    <option value="travellerPost">Traveller Post</option>
                </select>
            </div>
        </div>

        <!-- Dynamic Posts Container -->
        <div id="postsContainer" class="space-y-4 mx-4 sm:mx-12 md:mx-24 mt-4">
            <!-- Posts will be dynamically loaded here -->
        </div>
    </main>

    <!-- Footer -->
    <footer class="bg-white mt-8 py-4 shadow">
        <%- include('partials/footer') %>
    </footer>

    <!-- JavaScript functionality for loading and displaying posts -->
    <script>
        function initialLoad() {
            const postTypeSelect = document.getElementById("postType");
            const defaultPostType = postTypeSelect.value;
            loadPosts(defaultPostType);
        }

        window.onload = initialLoad;

        function loadPosts(postType) {
            fetch(`/home/posts/${postType}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok ' + response.statusText);
                    }
                    return response.json();
                })
                .then(posts => {
                    displayPosts(posts, postType);
                })
                .catch(error => console.error('Error loading posts:', error));
        }

        document.getElementById("postType").addEventListener("change", function () {
            const selectedType = this.value;
            loadPosts(selectedType);
        });

        function displayPosts(posts, postType) {
            const postsContainer = document.getElementById('postsContainer');
            postsContainer.innerHTML = '';

            if (posts && posts.length > 0) {
                const postList = document.createElement('ul');
                postList.classList.add('space-y-4');

                posts.forEach(post => {
                    const formattedDate = new Date(post.expectedTime).toLocaleDateString('en-US', {
                        weekday: 'long',
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric',
                    });

                    const postItem = document.createElement('li');
                    postItem.classList.add('bg-gray-50', 'p-6', 'rounded-lg', 'shadow', 'flex', 'flex-col', 'md:flex-row', 'justify-between', 'items-center');

                    postItem.innerHTML = `
                    <a href="/post/${postType}/${post._id}" style="width:90%;">
                        <div class="md:flex-1 md:mr-4">
                            <div class="flex justify-between">
                                <h4 class="text-lg font-semibold text-gray-800 mb-2"><b>${postType === 'senderPost' ? 'Name:' : 'Mode of Travel:'}
                                </b> ${post.productName || post.modeOfTravel}</h4>
                                <p class="text-gray-600"><b> ${post.paymentMin || post.parcelSize} - ${post.paymentMax || post.expectedAmount} </b></p>
                            </div>
                            <p class="text-gray-600"><b>From: </b>${post.source || post.startLocation}</p>
                            <p class="text-gray-600"><b>To: </b>${post.destination || post.endLocation}</p>
                            <p class="text-gray-600"><b>Expected Date: </b>${formattedDate || 'Not Available'}</p>
                        </div>
                    </a>
                    `;
                    postList.appendChild(postItem);
                });

                postsContainer.appendChild(postList);
            } else {
                postsContainer.innerHTML = `<p class="text-gray-600">You haven't created any posts yet.</p>`;
            }

            // const createPostDiv = document.createElement('div');
            // createPostDiv.classList.add('mt-6');

            // if (postType === "senderPost") {
            //     createPostDiv.innerHTML = `
            //         <a href="/register-parcel" class="inline-block bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded-lg shadow">
            //             Create Sender Post
            //         </a>
            //     `;
            // } else if (postType === "travellerPost") {
            //     createPostDiv.innerHTML = `
            //         <a href="/travellerPost" class="inline-block bg-blue-500 hover:bg-green-600 text-white font-semibold py-2 px-4 rounded-lg shadow">
            //             Create Traveller Post
            //         </a>
            //     `;
            // }

            // postsContainer.appendChild(createPostDiv);
        }

        document.getElementById("filterButton").addEventListener("click", function () {
            const sidebar = document.getElementById("filterSidebar");
            sidebar.classList.toggle("translate-x-full");
        });

        document.getElementById("closeSidebar").addEventListener("click", function () {
            const sidebar = document.getElementById("filterSidebar");
            sidebar.classList.add("translate-x-full");
        });
    </script>
</body>

</html>